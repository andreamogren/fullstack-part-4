{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","axios","get","then","response","data","newObject","post","id","put","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","toggleImportanceOf","find","n","changedNote","returnedNote","map","catch","error","setTimeout","key","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"qOAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UACjB,iBAAmB,qBACrB,OACI,wBAAIC,UAAU,QACTJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,KCMjCK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACK,KAIP,yBAAKJ,UAAU,SACZI,I,gBCSM,EAfA,WAEX,OADgBC,IAAMC,IAHV,cAIGC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAAAC,GAEX,OADgBL,IAAMM,KARV,aAQwBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAbJ,aAaI,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,8NCT7C,IAAMK,EAAS,WAOb,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,uGAwFWC,EAnFL,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,iBAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,IAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,IAEGvB,MAAK,SAAAwB,GACJT,EAASS,QAEV,IAGL,IAAMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAAArC,GAAI,OAAIA,EAAKG,aAE1DmC,EAAqB,SAAAtB,GACzB,IAAMhB,EAAOyB,EAAMc,MAAK,SAAAC,GAAC,OAAIA,EAAExB,KAAOA,KAChCyB,E,yVAAW,IAAOzC,EAAP,CAAaG,WAAYH,EAAKG,YAE/C+B,EACUlB,EAAIyB,GACX9B,MAAK,SAAA+B,GACJhB,EAASD,EAAMkB,KAAI,SAAA3C,GAAI,OAAIA,EAAKgB,KAAOA,EAAKhB,EAAO0C,SAEpDE,OAAM,SAAAC,GACLb,EAAgB,SAAD,OAAUhC,EAAKK,QAAf,0CACfyC,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAG,GAAC,OAAIA,EAAExB,KAAOA,UAiC1C,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcR,QAASuB,IACvB,6BACE,4BAAQzB,QAAS,kBAAMwB,GAAYD,KAAnC,QAAmDA,EAAU,YAAc,QAE7E,4BApCeO,EAAYO,KAAI,SAAA3C,GAAI,OACrC,kBAAC,EAAD,CACE+C,IAAK/C,EAAKgB,GACVhB,KAAMA,EACNC,iBAAkB,kBAAMqC,EAAmBtC,EAAKgB,WAmChD,0BAAMgC,SA3BM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB9C,QAASsB,EACTyB,MAAM,IAAIC,MAAOC,cACjBnD,UAAWoD,KAAKC,SAAW,GAC3BxC,GAAIS,EAAMgC,OAAS,GAGrBvB,EACUiB,GACPxC,MAAK,SAAA+B,GACJhB,EAASD,EAAMiC,OAAOhB,IACtBd,EAAW,SAeX,2BAAO+B,MAAOhC,EAASiC,SAhCJ,SAACX,GACxBrB,EAAWqB,EAAMY,OAAOF,UAgCpB,4BAAQG,KAAK,UAAb,SAEF,kBAAC,EAAD,QC9FNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.510b634f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n    const label = note.important \r\n    ? 'make important' : 'make not important'\r\n    return(\r\n        <li className='note'>\r\n            {note.content}\r\n            <button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n\r\n    )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React, {useState, useEffect} from 'react'\r\nimport Note from './components/Note'\r\nimport Notification from './components/Notification'\r\nimport noteService from './services/notes'\r\nimport './index.css'\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16,\r\n  }\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app, Department of Computer Science, University of Helsinki 2019</em>\r\n    </div> \r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('a new note...')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n\r\n  useEffect(() => {    \r\n    noteService     \r\n      .getAll()      \r\n      .then(initialNotes => {        \r\n        setNotes(initialNotes)      \r\n      })  \r\n    }, [])\r\n  \r\n\r\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\r\n\r\n  const toggleImportanceOf = id => { \r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = {...note, important: !note.important }\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(`Note '${note.content}' was already removed from the server`)\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n  }\r\n\r\n  const rows = () => notesToShow.map(note => \r\n    <Note \r\n      key={note.id} \r\n      note={note}\r\n      toggleImportance={() => toggleImportanceOf(note.id)}\r\n    />\r\n  )\r\n  \r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote, \r\n      date: new Date().toISOString(), \r\n      important: Math.random() > 0.5, \r\n      id: notes.length + 1\r\n    }\r\n\r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage}/>\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>show {showAll ? 'important' : 'all'}</button>\r\n      </div>\r\n      <ul>\r\n        {rows()}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input value={newNote} onChange={handleNoteChange}/>\r\n        <button type=\"submit\">Save</button>\r\n      </form>\r\n      <Footer/>\r\n    </div>\r\n  )\r\n}\r\n\r\n  export default App\r\n","import ReactDOM from 'react-dom'\r\nimport React from 'react'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}