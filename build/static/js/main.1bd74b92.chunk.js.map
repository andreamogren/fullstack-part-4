{"version":3,"sources":["services/persons.js","components/Person.js","components/ContactForm.js","components/Notification.js","components/Filter.js","App.js","index.js"],"names":["axios","get","then","response","data","newObject","post","id","delete","Person","props","name","number","onClick","ContactForm","changeName","changeNumber","clickHandler","value","onChange","type","Notification","message","className","Filter","searchTerm","App","useState","persons","setPersons","filteredPersons","setFilteredPersons","newName","setNewName","newNumber","setNewNumber","statusMessage","setStatusMessage","useEffect","personService","initialPersons","event","filtered","filter","person","toUpperCase","indexOf","target","filterEntries","preventDefault","doubleName","upperCaseNewName","map","upperCasePerson","undefined","personObject","setTimeout","catch","error","errorMessage","startNameErr","endNameErr","startNumberErr","endNumberErr","console","log","substring","createPerson","alert","addPerson","key","previousElementSibling","window","confirm","innerHTML","updatedPersons","removeNumber","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1bd74b92.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, deletePerson}","import React from 'react'\r\n\r\nconst Person = (props) => {\r\n    return(\r\n        <>\r\n        <p id={props.id}>{props.name} {props.number}</p>\r\n        <button onClick={props.delete}>Delete</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst ContactForm = ({name, number, changeName, changeNumber, clickHandler}) => {\r\n    return(\r\n        <>\r\n        <form>\r\n            <div>\r\n            name: <input value={name} onChange={changeName}/>\r\n            <br/>\r\n            phone: <input value={number} onChange={changeNumber}/>\r\n            </div>\r\n            <div>\r\n            <button type=\"submit\" onClick={clickHandler}>add</button>\r\n            </div>\r\n        </form>\r\n        </>\r\n    )\r\n} \r\n\r\nexport default ContactForm","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n    return(\r\n        <div className=\"notification\">\r\n            <p>{message}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\nconst Filter = ({searchTerm}) => {\r\nreturn(\r\n        <>\r\n        <p>Filter entries:</p> <input onChange={searchTerm}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filter ","import React, { useState, useEffect } from 'react'\r\nimport personService from './services/persons'\r\nimport Person from './components/Person'\r\nimport ContactForm from './components/ContactForm'\r\nimport Notification from './components/Notification'\r\nimport Filter from './components/Filter'\r\n\r\nconst App = () => {\r\n  //useState functions and variables\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ filteredPersons, setFilteredPersons ] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ statusMessage, setStatusMessage ] = useState('')\r\n  \r\n  //Fetching persons from database with useEffect hook\r\n  useEffect(() => {    \r\n    personService\r\n      .getAll()\r\n      .then(response => {\r\n        const initialPersons = response\r\n        setPersons(initialPersons)\r\n        setFilteredPersons(initialPersons)\r\n      })\r\n  }, [])\r\n    \r\n/* Add person function */\r\n  const addPerson = event => {\r\n    event.preventDefault()\r\n    \r\n    //Creating a new entry \r\n    const createPerson = () => {\r\n      const personObject = {\r\n        name: newName,\r\n        number: newNumber,\r\n      }\r\n      //Sending new entry to phonebook database\r\n      personService\r\n        .create(personObject)\r\n        .then(response => {\r\n          setPersons([...persons, response])\r\n          setFilteredPersons([...persons, response])\r\n          setStatusMessage(`Added ${personObject.name}`)\r\n          setTimeout(() => {\r\n            setStatusMessage('')\r\n          }, 5000)\r\n        })\r\n        .catch(error => {\r\n          const errorMessage = error.response.data\r\n          const startNameErr = errorMessage.indexOf('name')\r\n          const endNameErr = errorMessage.indexOf('(3)') + 3\r\n          const startNumberErr = errorMessage.indexOf('number')\r\n          const endNumberErr = errorMessage.indexOf('(8)') + 3\r\n          console.log(error.response.data)\r\n\r\n          if (startNameErr !== -1 && endNameErr !== -1) {\r\n            setStatusMessage(`${errorMessage.substring(startNameErr, endNameErr)}, ${errorMessage.substring(startNumberErr, endNumberErr)}`)\r\n            setTimeout(() => {\r\n              setStatusMessage('')\r\n            }, 5000)\r\n          } else if (startNameErr !== -1) {\r\n            setStatusMessage(`${errorMessage.substring(startNameErr, endNameErr)}`)\r\n            setTimeout(() => {\r\n              setStatusMessage('')\r\n            }, 5000)\r\n          } else if (startNumberErr !== -1) {\r\n            setStatusMessage(`${errorMessage.substring(startNumberErr, endNumberErr)}`)\r\n            setTimeout(() => {\r\n              setStatusMessage('')\r\n            }, 5000)\r\n          } else {\r\n            setStatusMessage(`There was an error with the contact details you added, please try again or check the console for more details.`)\r\n            setTimeout(() => {\r\n              setStatusMessage('')\r\n            }, 5000)\r\n          }\r\n        }) \r\n    }\r\n    \r\n    /* Comparing new entry to the ones in the phonebook */ \r\n    const upperCaseNewName = newName.toUpperCase()\r\n    let doubleName\r\n    persons.map(person => {\r\n      const upperCasePerson = person.name.toUpperCase()\r\n      if(upperCaseNewName === upperCasePerson) {\r\n        //If the person doesn't exist in the phonebook, add them to the doubleName variable\r\n        doubleName = upperCasePerson\r\n      }\r\n      return doubleName\r\n    })\r\n    \r\n    //If double name is undefined, create a new entry (didn't use !doubleName since I don't know what other values it might return)\r\n    if (doubleName === undefined) {\r\n      createPerson()\r\n    } else if(doubleName === upperCaseNewName) {\r\n      alert(`${newName} is already in the phonebook`)\r\n    }\r\n    /* */\r\n    \r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n  /* */\r\n  \r\n  /* Remove number function */\r\n  const removeNumber = event => {\r\n    const person = event.target.previousElementSibling\r\n    const id = person.id\r\n    if(window.confirm(`Delete ${person.innerHTML}?`)) {\r\n      personService\r\n        .deletePerson(id)\r\n        .then(() => {\r\n          personService\r\n          .getAll()\r\n          .then(response => {\r\n            const updatedPersons = response\r\n            setPersons(updatedPersons)\r\n            setFilteredPersons(updatedPersons)\r\n        })\r\n      })\r\n    }\r\n  }\r\n  /* */\r\n\r\n  const filterEntries = event => {\r\n      let filtered = persons.filter(person => {\r\n        return person.name.toUpperCase().indexOf(event.target.value.toUpperCase()) !== -1\r\n      })\r\n    setFilteredPersons(filtered)\r\n  }\r\n\r\n  const renderPersons = () => filteredPersons.map(person =>\r\n    <Person key={person.id} id={person.id} name={person.name} number={person.number} delete={(event) => removeNumber(event)}/>\r\n  )\r\n  \r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={statusMessage}/>\r\n      <Filter searchTerm={(event) => filterEntries(event)}/>\r\n      <ContactForm \r\n        name={newName}\r\n        number={newNumber}\r\n        changeName={(event) => setNewName(event.target.value)} \r\n        changeNumber={(event) => setNewNumber(event.target.value)} \r\n        clickHandler={(event) => addPerson(event)}\r\n      />\r\n      <h2>Numbers</h2>\r\n      {renderPersons()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}